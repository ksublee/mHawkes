% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mHFit.R
\docType{methods}
\name{mHFit,mHSpec-method}
\alias{mHFit,mHSpec-method}
\title{Perform a maximum likelihood estimation}
\usage{
\S4method{mHFit}{mHSpec}(object, arrival = NULL, inter_arrival = NULL,
  N = NULL, jump_type = NULL, mark = NULL, LAMBDA0 = NULL,
  llh_fun = NULL, grad = NULL, hess = NULL, constraint = NULL,
  method = "BFGS", ...)
}
\arguments{
\item{inter_arrival}{Inter-arrival times of events. Includes inter-arrival for events that occur in all dimensions. Start with zero.}

\item{jump_type}{a vector of dimensions. Distinguished by numbers, 1, 2, 3, and so on. Start with zero.}

\item{mark}{a vector of mark (jump) sizes. Start with zero.}

\item{LAMBDA0}{The starting values of lambda. Must have the same dimensional matrix (n by n) with mHSpec.}

\item{llh_fun}{user provided log-likelihood function.}

\item{constraint}{constraint matrix. For more information, see \code{\link[maxLik]{maxLik}}.}

\item{method}{method for optimization. For more information, see \code{\link[maxLik]{maxLik}}.}
}
\description{
This function uses \code{\link[maxLik]{maxLik}} for the optimizer.
}
\examples{
# Generate sample path
MU1 <- 0.3; ALPHA1 <- 1.5; BETA1 <- 2
mHSpec1 <- new("mHSpec", MU=MU1, ALPHA=ALPHA1, BETA=BETA1)
res1 <- mHSim(mHSpec1,  n=5000)

# Perform maximum likelihood estimation with a starting point defined by mHSpec0.
mHSpec0 <- new("mHSpec", MU=0.2, ALPHA=1.2, BETA=1.8)
mle <- mHFit(mHSpec0, inter_arrival = res1$inter_arrival)
summary(mle)

MU2 <- matrix(c(0.2), nrow = 2)
ALPHA2 <- matrix(c(0.75, 0.92, 0.92, 0.75), nrow = 2, byrow=TRUE)
BETA2 <- matrix(c(2.90, 2.90, 2.90, 2.90), nrow = 2, byrow=TRUE)
ETA2 <- matrix(c(0.19, 0.19, 0.19, 0.19), nrow = 2, byrow=TRUE)
JUMP2 <- function(n,...) rgeom(n, 0.65) + 1
mHSpec2 <- new("mHSpec", MU=MU2, ALPHA=ALPHA2, BETA=BETA2, ETA=ETA2, Jump =JUMP2)
res2 <- mHSim(mHSpec2)

# Perform maximum likelihood estimation
summary(mHFit(mHSpec2, arrival = res2$arrival, N = res2$N))
summary(mHFit(mHSpec2, inter_arrival = res2$inter_arrival, mark = res2$mark2, jump_type = res2$jump_type))
summary(mHFit(arrival = res2$arrival, N = res2$N))
}
